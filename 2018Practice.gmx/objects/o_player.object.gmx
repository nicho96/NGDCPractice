<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_speed = 1.5
x_speed = 0
y_speed = 0
x_friction = 0.2
y_gravity = 0.3
max_x_speed = 12
max_y_speed = 15
slide_speed = 3
ver_jump_speed = -10
hor_jump_speed = 12
move_lock = 0
move_lock_time = 20
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_left = keyboard_check(ord("A")) || gamepad_button_check(0, gp_padl)
key_right = keyboard_check(ord("D")) || gamepad_button_check(0, gp_padr)
key_jump = keyboard_check_pressed(vk_space) || gamepad_button_check_pressed(0, gp_face1)
key_jump_held = keyboard_check(vk_space) || gamepad_button_check(0, gp_face1)
key_restart = keyboard_check(ord("R")) || gamepad_button_check_pressed(0, gp_shoulderrb)

gamepad_set_axis_deadzone(0, 0.325)
gamepad_hor = gamepad_axis_value(0, gp_axislh)
gamepad_ver = gamepad_axis_value(0, gp_axislv)

if(move_lock &gt; 0){
    gamepad_hor *= 0.1
    move_lock -= 1
}

if(key_restart){
    room_restart()
}

if(gamepad_hor &lt; 0){
    image_xscale = -abs(image_xscale)
}
if(gamepad_hor &gt; 0){
    image_xscale = abs(image_xscale)
}

hspd = move_speed * gamepad_hor
y_speed += y_gravity

x_speed += hspd
x_speed -= sign(x_speed) * x_friction

if(abs(x_speed) &lt; 0.325){
    x_speed = 0
}

if(x_speed &gt; max_x_speed){
    x_speed = max_x_speed
}

if(x_speed &lt; -max_x_speed){
    x_speed = -max_x_speed
}

if(y_speed &gt; max_y_speed){
    y_speed = max_y_speed
}

left_wall = place_meeting(x + x_speed, y, o_wall_left)
right_wall = place_meeting(x + x_speed, y, o_wall_right)

if(left_wall &amp;&amp; right_wall){
    room_restart()
}else if(left_wall){
    wall = instance_place(x + x_speed, y, o_wall_left)
    x = wall.x + wall.sprite_width + abs(sprite_width) / 2
    x_speed = 0
}else if(right_wall){
    wall = instance_place(x + x_speed, y, o_wall_right)
    x = wall.x - abs(sprite_width) / 2
    x_speed = 0
}else{
    x += x_speed
}

near_left_wall = place_meeting(x + x_speed - 5, y, o_wall_left)
near_right_wall = place_meeting(x + x_speed + 5, y, o_wall_right)

if(key_jump &amp;&amp; near_left_wall){
    y_speed = ver_jump_speed
    x_speed = hor_jump_speed
    x += 1
    o_wall_ctrl.left_wall_dir = -1
    move_lock = move_lock_time
}else if(key_jump &amp;&amp; near_right_wall){
    y_speed = ver_jump_speed
    x_speed = -hor_jump_speed
    x -= 1
    move_lock = move_lock_time
    o_wall_ctrl.right_wall_dir = 1
}else if(near_left_wall || near_right_wall){
    y_speed = slide_speed
}

y += y_speed


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
